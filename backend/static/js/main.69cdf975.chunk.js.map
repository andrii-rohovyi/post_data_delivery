{"version":3,"sources":["components/SimpleMap.tsx","components/ui/InputNumberComponent.tsx","components/ui/DatePicker.tsx","components/ui/Radio.tsx","components/ui/DropdownNumber.tsx","components/ui/RangeTimePicker.tsx","components/AddPointForm.tsx","components/AddPointComponent.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["colors","route","Marker","children","text","deliveryNumber","courier","startingPoint","droppedNode","ExclamationCircleOutlined","size","style","width","height","className","color","background","borderRadius","border","undefined","padding","display","justifyContent","alignItems","SimpleMap","coordinates","map","coordinate","lat","lng","points","addPoint","result","showResult","setMap","maps","routes","count","Polyline","path","detailed_route","geodesic","strokeColor","strokeOpacity","strokeWeight","float","bootstrapURLKeys","key","defaultCenter","defaultZoom","onClick","event","concat","options","styles","stylers","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","res","console","log","handleApiLoaded","dropped_nodes","courierPoints","courierNumber","point","InputNumberComponent","input","meta","rest","min","max","defaultValue","onChange","value","errorText","touched","error","DatePicker","format","valueOf","checkedIcons","CarFilled","ShoppingFilled","unCheckedIcons","Radio","icon","Button","buttonStyle","e","checked","DropdownNumber","menu","Item","overlay","marginLeft","DownOutlined","RangePicker","TimePicker","RangeTimePicker","moment","require","AddPointForm","setResult","setShowResult","onSubmit","values","a","data","central_store","location","time_window","deliveryDate","stores","index","demand","filter","couriers","pid","capacity","Number","transport","fetch","method","headers","mode","body","JSON","stringify","rawResponse","status","alert","json","content","initialValues","length","mutators","arrayMutators","render","handleSubmit","form","push","pop","pristine","submitting","paddingLeft","paddingTop","textAlign","fontFamily","fontStyle","fontWeight","fontSize","lineHeight","name","component","placeholder","marginTop","fields","marginRight","marginBottom","paddingBottom","type","initialValue","flexDirection","PlusCircleTwoTone","cursor","position","CloseCircleFilled","remove","top","right","reset","disabled","AddPointComponent","App","useState","setMaps","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"kPAkCMA,EAAS,CACX,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGEC,EAAQ,CAAC,KAAQ,aAAc,YAAe,CAAC,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,U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AAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,U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","file":"static/js/main.69cdf975.chunk.js","sourcesContent":["import React, {Component, useState} from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport {ExclamationCircleOutlined} from \"@ant-design/icons\";\n\ntype MarkerProps = {\n    children?: React.ReactNode,\n    lat: number\n    lng: number\n    text: string\n    courier?: number\n    deliveryNumber?: number,\n    startingPoint?: boolean\n    droppedNode?: boolean\n}\n\n//.cluster-marker {\n//   color: #fff;\n//   background: #1978c8;\n//   border-radius: 50%;\n//   padding: 10px;\n//   display: flex;\n//   justify-content: center;\n//   align-items: center;\n// }\n//\n// .crime-marker {\n//   background: none;\n//   border: none;\n// }\n//\n// .crime-marker img {\n//   width: 25px;\n// }\n\nconst colors = [\n    \"#006DFF\",\n    \"#F2994A\",\n    \"#900020\",\n    \"#013A20\",\n    \"#000000\",\n    \"#ECF87F\",\n    \"#FFAEBC\",\n    \"#CDD193\",\n    \"#67595E\",\n]\n\nconst route = {\"type\": \"LineString\", \"coordinates\": [[30.52077, 50.44368], [30.52079, 50.44374], [30.52095, 50.44423], [30.52113, 50.44479], [30.52117, 50.44489], [30.52193, 50.44724], [30.52209, 50.44775], [30.52225, 50.44819], [30.52247, 50.44863], [30.52282, 50.44907], [30.52288, 50.44913], [30.52307, 50.44933], [30.52321, 50.44946], [30.52339, 50.4496], [30.524, 50.45005], [30.52449, 50.45038], [30.52444, 50.45042], [30.52295, 50.45122], [30.52277, 50.4513], [30.5226, 50.45139], [30.52256, 50.4514], [30.52246, 50.4515], [30.52239, 50.45174], [30.5223, 50.45207], [30.52222, 50.45236], [30.5222, 50.45241], [30.52208, 50.45277], [30.522, 50.45302], [30.52199, 50.45305], [30.5219, 50.45327], [30.52179, 50.45348], [30.52168, 50.45364], [30.52162, 50.45372], [30.52159, 50.45377], [30.52128, 50.45419], [30.5211, 50.45442], [30.52107, 50.45447], [30.52098, 50.45459], [30.52063, 50.45501], [30.52052, 50.45508], [30.52038, 50.45516], [30.52016, 50.45522], [30.51997, 50.45526], [30.5199, 50.45527], [30.51972, 50.45535], [30.51913, 50.45538], [30.51901, 50.45533], [30.51735, 50.4554], [30.51712, 50.45541], [30.51694, 50.45541], [30.51636, 50.45541], [30.51586, 50.45541], [30.51446, 50.45543], [30.51393, 50.45541], [30.51379, 50.45541], [30.51366, 50.4554], [30.51304, 50.45537], [30.51288, 50.45536], [30.51238, 50.45537], [30.51181, 50.45534], [30.5117, 50.45534], [30.51165, 50.45533], [30.5116, 50.45533], [30.50869, 50.45517], [30.50811, 50.45517], [30.50759, 50.45524], [30.5074, 50.45526], [30.5071, 50.45522], [30.50649, 50.45529], [30.50638, 50.45531], [30.50613, 50.45534], [30.50576, 50.45543], [30.50486, 50.45567], [30.50476, 50.4557], [30.50482, 50.45579], [30.50556, 50.45688], [30.5056, 50.45695], [30.50568, 50.45707], [30.50582, 50.45726], [30.50586, 50.45731], [30.50594, 50.45742], [30.50597, 50.45747], [30.50599, 50.4575], [30.50606, 50.45762], [30.50623, 50.45791], [30.50629, 50.45801], [30.50637, 50.45815], [30.50639, 50.45831], [30.50635, 50.45889], [30.50632, 50.45948], [30.50626, 50.45964], [30.50617, 50.45978], [30.50603, 50.45991], [30.50602, 50.45992], [30.50601, 50.45993], [30.50593, 50.45997], [30.50578, 50.46003], [30.50546, 50.46014], [30.50514, 50.46027], [30.50493, 50.46043], [30.50461, 50.46077], [30.50458, 50.46085], [30.50456, 50.461], [30.50462, 50.46111], [30.50468, 50.46121], [30.50502, 50.46166], [30.5053, 50.46198], [30.50555, 50.46213], [30.50622, 50.46245], [30.5065, 50.46259], [30.50656, 50.46262], [30.50668, 50.46268], [30.50684, 50.46265], [30.50705, 50.46252], [30.50706, 50.46252], [30.50745, 50.46277], [30.50754, 50.46282], [30.50849, 50.4634], [30.509, 50.46373], [30.50965, 50.46416], [30.51023, 50.46454], [30.51026, 50.46456], [30.51052, 50.46472], [30.5109, 50.46497], [30.51098, 50.46502], [30.51106, 50.46507], [30.51109, 50.46509], [30.5113, 50.46523], [30.51137, 50.46528], [30.51289, 50.46631], [30.51289, 50.46631], [30.51335, 50.46661], [30.51338, 50.46662], [30.51454, 50.46738], [30.51459, 50.46742], [30.51461, 50.46743], [30.51505, 50.46771], [30.51536, 50.46792], [30.51574, 50.46817], [30.51612, 50.46841], [30.51673, 50.46882], [30.5168, 50.46886], [30.5169, 50.46893], [30.51787, 50.46956], [30.51838, 50.46988], [30.51844, 50.46993], [30.51851, 50.46997], [30.51962, 50.4707], [30.52048, 50.47126], [30.52052, 50.47129], [30.52069, 50.4714], [30.52079, 50.47134], [30.52188, 50.47068], [30.522, 50.47061], [30.52332, 50.46979], [30.52334, 50.46977], [30.52341, 50.46973], [30.52364, 50.46956], [30.52383, 50.46943], [30.52389, 50.46939], [30.52403, 50.46926], [30.52414, 50.46908], [30.52437, 50.4681], [30.52455, 50.46746], [30.52459, 50.46732], [30.52462, 50.46713], [30.52481, 50.46636], [30.52519, 50.46456], [30.52534, 50.46385], [30.52544, 50.4633], [30.52585, 50.46139], [30.52604, 50.46052], [30.52597, 50.46031], [30.52591, 50.46025], [30.52543, 50.45997], [30.52451, 50.45941], [30.52445, 50.45937], [30.5244, 50.45935], [30.52466, 50.45918]]};\n\n\nconst Marker: React.FC<MarkerProps> = ({\n   children,\n   text,\n   deliveryNumber ,\n   courier,\n   startingPoint,\n   droppedNode\n}) => (\n    <>\n        {droppedNode ?\n            <ExclamationCircleOutlined size={20} style={{width: \"20px\", height: \"20px\"}}/> :\n            <div\n                className=\"cluster-marker\"\n                style={{\n                    width: \"20px\",\n                    height: \"20px\",\n                    color: \"black\",\n                    background: startingPoint ? \"#006DFF\" : \"#fff\",\n                    borderRadius: \"50%\",\n                    border: `2px solid ${courier !== undefined ? colors[courier] : \"#006DFF\"}`,\n                    padding: \"10px\",\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\"\n                }}\n            >\n                {deliveryNumber}\n            </div>\n        }\n    </>\n);\ntype PointType = {\n  lat: number,\n  lng: number\n}\n\n// type Response = {\n//     routes: PointType[][],\n//     dropped_nodes: PointType[][]\n// }\n\ntype Response = {\n    routes: RouteType[],\n    dropped_nodes: PointType[]\n}\n\n\ntype RouteType = {\n    route: PointType[],\n    detailed_route: PointType[]\n}\n\nconst resp: Response = {\n    'routes': [\n        {\n            'route': [\n                {\n                    'lat': 50.44368,\n                    'lng': 30.52077\n                },\n                {\n                    'lat': 50.45918,\n                    'lng': 30.52466\n                },\n            ],\n            'detailed_route': route.coordinates.map((coordinate => {\n            return(\n            {\n                lat: coordinate[1],\n                lng: coordinate[0]\n            }\n            )\n        }))\n        },\n        {\n            'route': [\n                {\n                    'lat': 50.36254421120163,\n                    'lng': 30.647584993775194\n                },\n                {\n                    'lat': 50.461872909975,\n                    'lng': 30.703203279908006\n                },\n            ],\n            'detailed_route': [\n                {\n                    'lat': 50.461872909975,\n                    'lng': 30.703203279908006\n                },\n                {\n                    'lat': 50.461872909975,\n                    'lng': 30.703203279908006\n                },\n            ]\n        }\n    ],\n    'dropped_nodes': [\n        {\n            'lat': 50.461872909975,\n            'lng': 30.703203279908006\n        },\n        {\n            'lat': 50.461872909975,\n            'lng': 30.703203279908006\n        },\n    ]\n}\n\ntype Props = {\n    points: PointType[],\n    addPoint: (points: PointType[]) => void,\n    result: Response,\n    showResult: boolean,\n    setMap: (map: any) => void\n    maps: any\n}\n\nexport const SimpleMap: React.FC<Props> = ({\n   points,\n   addPoint,\n   result,\n   showResult,\n   setMap,\n   maps\n}) => {\n\n    const center = {\n      lat: 50.45466,\n      lng: 30.5238\n    }\n\n    const handleApiLoaded = (map: any, maps: any) => {\n        const res = route.coordinates.map((coordinate => {\n            return(\n            {\n                lat: coordinate[1],\n                lng: coordinate[0]\n            }\n            )\n        }))\n        console.log(res, 'coordinates');\n        const flightPlanCoordinates = [\n        { lat: 37.772, lng: -122.214 },\n        { lat: 21.291, lng: -157.821 },\n        { lat: -18.142, lng: 178.431 },\n        { lat: -27.467, lng: 153.027 },\n      ];\n      const flightPath = new maps.Polyline({\n        path: res,\n        geodesic: true,\n        strokeColor: \"#FF0000\",\n        strokeOpacity: 1.0,\n        strokeWeight: 2,\n      });\n      setMap({maps, map});\n      // flightPath.setMap(map);\n\n\n    };\n\n    if (showResult) {\n        result.routes.map((route, count) => {\n          const flightPath = new maps.maps.Polyline({\n              path: route.detailed_route,\n              geodesic: true,\n              strokeColor: colors[count],\n              strokeOpacity: 1.0,\n              strokeWeight: 2,\n          });\n          flightPath.setMap(maps.map);\n      })\n    }\n\n\n    const addMapPoint = (event: PointType) => {\n      addPoint(points.concat([{lat: event.lat, lng: event.lng}]))\n    }\n    return (\n      // Important! Always set the container height explicitly\n      <div style={{ height: '100vh', width: '66%', float: \"right\" }}>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: \"AIzaSyCWYtTeal3a9ttpSA8HYHmgJ21k4gnVMOA\" }}\n          defaultCenter={center}\n          defaultZoom={11}\n          onClick={addMapPoint}\n          options={{styles: [{ stylers: [{ 'saturation': -100 }, ] }]}}\n          yesIWantToUseGoogleMapApiInternals={true}\n          onGoogleApiLoaded={({ map, maps }) => handleApiLoaded(map, maps)}\n        >\n            {showResult &&\n                result.dropped_nodes.map((droppedNode) => (\n                    <Marker\n                        lat={droppedNode.lat}\n                        lng={droppedNode.lng}\n                        text=\"Starting Point\"\n                        droppedNode={true}\n                    />\n                ))\n            }\n            {showResult ?\n                result.routes.map((courierPoints, courierNumber) => {\n                    console.log(courierPoints, 'courierPoints');\n                    return (\n                    courierPoints.route.map((point, count) => {\n                            if (count === 0) {\n                                return (\n                                    <Marker\n                                        lat={point.lat}\n                                        lng={point.lng}\n                                        text=\"Starting Point\"\n                                        startingPoint={true}\n                                    />\n                                )\n                            }\n                            return (\n                                <Marker\n                                    lat={point.lat}\n                                    lng={point.lng}\n                                    text={`Courier ${count} number ${courierNumber}`}\n                                    courier={courierNumber}\n                                    deliveryNumber={count}\n                                />\n                            )\n                    }\n                    ))\n                    }) :\n                points.map((point, count) => (\n                  <Marker\n                    lat={point.lat}\n                    lng={point.lng}\n                    text={`Point number ${count}`}\n                    deliveryNumber={count}\n                    startingPoint={count === 0}\n                  />\n              ))\n            }\n        </GoogleMapReact>\n      </div>\n    );\n  }\n\n\nexport default SimpleMap;","import { InputNumber } from \"antd\";\n\nexport const InputNumberComponent = ({ input, meta, ...rest }: any) => {\n    return(\n    <InputNumber\n        {...input}\n        {...rest}\n        min={1}\n        max={1000}\n        defaultValue={3}\n        onChange={(value: any) => input.onChange(value)}\n        errorText={meta.touched ? meta.error : ''}\n    />\n)}","import { DatePicker as AntDatePicker }  from 'antd';\n\n\nexport const DatePicker = ({ input, meta, ...rest }: any) => {\n    return(\n    <AntDatePicker\n        {...input}\n        {...rest}\n        format=\"YYYY-MM-DD\"\n        onChange={(value: any) => {\n            console.log(value.valueOf());\n            input.onChange(value)\n        }}\n        errorText={meta.touched ? meta.error : ''}\n    />\n)}\n","import { Radio as AntRadio } from 'antd';\nimport {CarFilled, ShoppingFilled} from \"@ant-design/icons\";\nimport React from \"react\";\n\n\nconst checkedIcons = {\n    'driving': <CarFilled style={{color: \"#1890ff\"}} width=\"24px\" height=\"24px\"/>,\n    'walking': <ShoppingFilled style={{color: \"#1890ff\"}} />\n}\n\nconst unCheckedIcons = {\n    'driving': <CarFilled />,\n    'walking': <ShoppingFilled />\n}\n\n\nexport const Radio = ({ input, meta, icon, ...rest }: any) => {\n    return(\n      <AntRadio.Button\n          {...input}\n          {...rest}\n          value={icon}\n          // style={{\n          //     border: \"none\",\n          //     background: \"none\"\n          // }}\n          buttonStyle=\"outlined\"\n          onChange={(e) => {\n              input.onChange(input.value);\n          }}\n      >\n          {input.checked ?\n              // @ts-ignore\n            checkedIcons[input.value] :\n              // @ts-ignore\n            unCheckedIcons[input.value]\n\n          }\n      </AntRadio.Button>\n)}\n","import { Menu, Dropdown, Button } from 'antd';\n\nimport { DownOutlined } from '@ant-design/icons';\n\nexport const DropdownNumber = ({ input, meta, ...rest }: any) => {\n\nconst menu = (\n  <Menu onClick={(e) => {\n      input.onChange(e.key);\n  }\n  }>\n    <Menu.Item key={100}>\n      100 kg\n    </Menu.Item>\n    <Menu.Item key={200} >\n      200 kg\n    </Menu.Item>\n    <Menu.Item key={500} >\n      500 kg\n    </Menu.Item>\n    <Menu.Item key={1000} >\n      1000 kg\n    </Menu.Item>\n    <Menu.Item key={1500} >\n      1500 kg\n    </Menu.Item>\n    <Menu.Item key={3000}>\n      3000 kg\n    </Menu.Item>\n  </Menu>\n);\n    return(\n        <Dropdown\n            {...input}\n            {...rest}\n            overlay={menu}>\n            {/*onChange={(value: any) => input.onChange(value)}*/}\n      <Button\n          style={{marginLeft: \"30px\"}}\n      >\n          {input.value ? input.value : 300 }<DownOutlined />\n      </Button>\n    </Dropdown>\n)}","import {TimePicker} from \"antd\";\n\nconst { RangePicker } = TimePicker;\n\n\nexport const RangeTimePicker = ({ input, meta, ...rest }: any) => {\n    return(\n    <RangePicker\n        {...input}\n        {...rest}\n        style={{width: \"37%\"}}\n        format=\"HH:mm\"\n        onChange={(value: any) => input.onChange(value)}\n        errorText={meta.touched ? meta.error : ''}\n    />\n)}","import React from \"react\";\n\nimport { Form, Field } from 'react-final-form'\nimport {Button, Form as AntForm, Radio as AntRadio, TimePicker} from 'antd';\nimport arrayMutators from 'final-form-arrays';\nimport { FieldArray } from 'react-final-form-arrays'\nimport {InputNumberComponent} from \"./ui/InputNumberComponent\";\nimport {InputComponent} from \"./ui/Input\";\nimport {CarFilled, CloseCircleFilled, CloseOutlined, PlusCircleTwoTone, ShoppingFilled} from \"@ant-design/icons\";\nimport {DatePickerRange} from \"./ui/DatePickerRange\";\nimport {SelectComponent} from \"./ui/InputSelect\";\nimport {DatePicker} from \"./ui/DatePicker\";\nimport {Radio} from \"./ui/Radio\";\nimport {DropdownNumber} from \"./ui/DropdownNumber\";\nimport {RangeTimePicker} from \"./ui/RangeTimePicker\";\n\nvar moment = require('moment');\n\ntype PointType = {\n  lat: number\n  lng: number\n  demand?: number\n  time_window?: [moment.Moment, moment.Moment]\n}\ntype Props = {\n    points: PointType[],\n    addPoint: (points: PointType[]) => void,\n    result: Response,\n    setResult: (points: Response) => void\n    setShowResult: (showResult: boolean) => void,\n    maps: any\n}\n\ntype CourierType = {\n    capacity: number,\n    transport: string\n}\n\ntype Values = {\n    points: PointType[],\n    couriers: CourierType[],\n    deliveryDate: moment.Moment\n}\n//demand: 2\n//\n// lat: 50.4486941427873\n//\n// lng: 30.52272858686755\n//\n// time_window: Array [ {…}, {…} ]\n\ntype Response = {\n    routes: RouteType[],\n    dropped_nodes: PointType[]\n}\n\n\ntype RouteType = {\n    route: PointType[],\n    detailed_route: PointType[]\n}\n\n//\"stores\": [ {\"location\": [50.489023, 30.467676], \"demand\": 1, \"time_window\": [0, 1] }, {\"location\": [50.489030, 30.472075], \"demand\": 2, \"time_window\": [2, 3]} ],\n\ntype BackLocation = {\n    location: number[]\n    demand?: number,\n    time_window: number[] | null\n}\n\nexport const AddPointForm: React.FC<Props> = ({\n  points,\n  addPoint,\n  result,\n  setResult,\n  setShowResult,\n    maps\n}) => {\n    const required = (value: any) => (value ? undefined : 'Required');\n\n    const onSubmit = async (values: Values) => {\n      const data = {\n          central_store: {\n              location: [values.points[0].lat, values.points[0].lng],\n              time_window: values.points[0].time_window ?\n                  [\n                      // @ts-ignore\n                      moment(values.deliveryDate.format(\"YYYY-MM-DD\") + \" \" + values.points[0].time_window[0].format('HH:mm'), 'YYYY-MM-DD HH:mm').valueOf(),\n                      // @ts-ignore\n                      moment(values.deliveryDate.format(\"YYYY-MM-DD\") + \" \" + values.points[0].time_window[1].format('HH:mm'), 'YYYY-MM-DD HH:mm').valueOf(),\n                  ] : null\n          },\n          stores: values.points\n              .map((point: PointType, index: number) => index !== 0 ? {\n                  location: [point.lat, point.lng],\n                  demand: point.demand,\n                  time_window: point.time_window ? [\n                      moment(values.deliveryDate.format(\"YYYY-MM-DD\") + \" \" + point.time_window[0].format('HH:mm'), 'YYYY-MM-DD HH:mm').valueOf(),\n                      moment(values.deliveryDate.format(\"YYYY-MM-DD\") + \" \" + point.time_window[1].format('HH:mm'), 'YYYY-MM-DD HH:mm').valueOf(),\n                  ] : null\n              } : null)\n              .filter((value: BackLocation | null) => value !== null),\n          couriers: values.couriers.map((courier, index) => ({\n              pid: index,\n              capacity: Number(courier.capacity),\n              transport: courier.transport\n          }))\n      }\n      console.log(data.central_store.time_window, 'central time_window');\n      const rawResponse = await fetch('/', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        mode: 'cors',\n        body: JSON.stringify(data)\n      });\n      if (rawResponse.status > 499) {\n          alert('Backend responded with 500');\n      }\n\n      const content: Response = await rawResponse.json();\n      const route = {\"type\": \"LineString\", \"coordinates\": [[30.52077, 50.44368], [30.52079, 50.44374], [30.52095, 50.44423], [30.52113, 50.44479], [30.52117, 50.44489], [30.52193, 50.44724], [30.52209, 50.44775], [30.52225, 50.44819], [30.52247, 50.44863], [30.52282, 50.44907], [30.52288, 50.44913], [30.52307, 50.44933], [30.52321, 50.44946], [30.52339, 50.4496], [30.524, 50.45005], [30.52449, 50.45038], [30.52444, 50.45042], [30.52295, 50.45122], [30.52277, 50.4513], [30.5226, 50.45139], [30.52256, 50.4514], [30.52246, 50.4515], [30.52239, 50.45174], [30.5223, 50.45207], [30.52222, 50.45236], [30.5222, 50.45241], [30.52208, 50.45277], [30.522, 50.45302], [30.52199, 50.45305], [30.5219, 50.45327], [30.52179, 50.45348], [30.52168, 50.45364], [30.52162, 50.45372], [30.52159, 50.45377], [30.52128, 50.45419], [30.5211, 50.45442], [30.52107, 50.45447], [30.52098, 50.45459], [30.52063, 50.45501], [30.52052, 50.45508], [30.52038, 50.45516], [30.52016, 50.45522], [30.51997, 50.45526], [30.5199, 50.45527], [30.51972, 50.45535], [30.51913, 50.45538], [30.51901, 50.45533], [30.51735, 50.4554], [30.51712, 50.45541], [30.51694, 50.45541], [30.51636, 50.45541], [30.51586, 50.45541], [30.51446, 50.45543], [30.51393, 50.45541], [30.51379, 50.45541], [30.51366, 50.4554], [30.51304, 50.45537], [30.51288, 50.45536], [30.51238, 50.45537], [30.51181, 50.45534], [30.5117, 50.45534], [30.51165, 50.45533], [30.5116, 50.45533], [30.50869, 50.45517], [30.50811, 50.45517], [30.50759, 50.45524], [30.5074, 50.45526], [30.5071, 50.45522], [30.50649, 50.45529], [30.50638, 50.45531], [30.50613, 50.45534], [30.50576, 50.45543], [30.50486, 50.45567], [30.50476, 50.4557], [30.50482, 50.45579], [30.50556, 50.45688], [30.5056, 50.45695], [30.50568, 50.45707], [30.50582, 50.45726], [30.50586, 50.45731], [30.50594, 50.45742], [30.50597, 50.45747], [30.50599, 50.4575], [30.50606, 50.45762], [30.50623, 50.45791], [30.50629, 50.45801], [30.50637, 50.45815], [30.50639, 50.45831], [30.50635, 50.45889], [30.50632, 50.45948], [30.50626, 50.45964], [30.50617, 50.45978], [30.50603, 50.45991], [30.50602, 50.45992], [30.50601, 50.45993], [30.50593, 50.45997], [30.50578, 50.46003], [30.50546, 50.46014], [30.50514, 50.46027], [30.50493, 50.46043], [30.50461, 50.46077], [30.50458, 50.46085], [30.50456, 50.461], [30.50462, 50.46111], [30.50468, 50.46121], [30.50502, 50.46166], [30.5053, 50.46198], [30.50555, 50.46213], [30.50622, 50.46245], [30.5065, 50.46259], [30.50656, 50.46262], [30.50668, 50.46268], [30.50684, 50.46265], [30.50705, 50.46252], [30.50706, 50.46252], [30.50745, 50.46277], [30.50754, 50.46282], [30.50849, 50.4634], [30.509, 50.46373], [30.50965, 50.46416], [30.51023, 50.46454], [30.51026, 50.46456], [30.51052, 50.46472], [30.5109, 50.46497], [30.51098, 50.46502], [30.51106, 50.46507], [30.51109, 50.46509], [30.5113, 50.46523], [30.51137, 50.46528], [30.51289, 50.46631], [30.51289, 50.46631], [30.51335, 50.46661], [30.51338, 50.46662], [30.51454, 50.46738], [30.51459, 50.46742], [30.51461, 50.46743], [30.51505, 50.46771], [30.51536, 50.46792], [30.51574, 50.46817], [30.51612, 50.46841], [30.51673, 50.46882], [30.5168, 50.46886], [30.5169, 50.46893], [30.51787, 50.46956], [30.51838, 50.46988], [30.51844, 50.46993], [30.51851, 50.46997], [30.51962, 50.4707], [30.52048, 50.47126], [30.52052, 50.47129], [30.52069, 50.4714], [30.52079, 50.47134], [30.52188, 50.47068], [30.522, 50.47061], [30.52332, 50.46979], [30.52334, 50.46977], [30.52341, 50.46973], [30.52364, 50.46956], [30.52383, 50.46943], [30.52389, 50.46939], [30.52403, 50.46926], [30.52414, 50.46908], [30.52437, 50.4681], [30.52455, 50.46746], [30.52459, 50.46732], [30.52462, 50.46713], [30.52481, 50.46636], [30.52519, 50.46456], [30.52534, 50.46385], [30.52544, 50.4633], [30.52585, 50.46139], [30.52604, 50.46052], [30.52597, 50.46031], [30.52591, 50.46025], [30.52543, 50.45997], [30.52451, 50.45941], [30.52445, 50.45937], [30.5244, 50.45935], [30.52466, 50.45918]]};\n      const resp = {\n    'routes': [\n        {\n            'route': [\n                {\n                    'lat': 50.44368,\n                    'lng': 30.52077\n                },\n                {\n                    'lat': 50.45918,\n                    'lng': 30.52466\n                },\n            ],\n            'detailed_route': route.coordinates.map((coordinate => {\n            return(\n            {\n                lat: coordinate[1],\n                lng: coordinate[0]\n            }\n            )\n        }))\n        },\n        {\n            'route': [\n                {\n                    'lat': 50.36254421120163,\n                    'lng': 30.647584993775194\n                },\n                {\n                    'lat': 50.461872909975,\n                    'lng': 30.703203279908006\n                },\n            ],\n            'detailed_route': [\n                {\n                    'lat': 50.461872909975,\n                    'lng': 30.703203279908006\n                },\n                {\n                    'lat': 50.461872909975,\n                    'lng': 30.703203279908006\n                },\n            ]\n        }\n    ],\n    'dropped_nodes': [\n        {\n            'lat': 50.461872909975,\n            'lng': 30.703203279908006\n        },\n        {\n            'lat': 50.461872909975,\n            'lng': 30.703203279908006\n        },\n    ]\n}\n\n      setResult(content);\n      setShowResult(true)\n    }\n    return (\n        <Form\n          initialValues={{ points: (points.length && points) || [undefined, undefined], couriers: [{transport: 'driving', capacity: 200}] }}\n          onSubmit={onSubmit}\n          mutators={{\n            ...arrayMutators\n          }}\n          render={({\n            handleSubmit,\n            form: {\n              mutators: { push, pop }\n            }, // injected from final-form-arrays above\n            pristine,\n            form,\n            submitting,\n            values,\n          }) => {\n              return (\n              <div style={{paddingLeft: \"16px\", paddingTop: \"24px\", textAlign: \"left\"}}>\n                  {console.log(values, 'val')}\n                  <label style={{\n                      fontFamily: \"DM Sans\",\n                      fontStyle: \"normal\",\n                      fontWeight: \"bold\",\n                      fontSize: \"14px\",\n                      lineHeight: \"24px\",\n                      color: \"#7B8AA1\"\n                  }}\n                  >\n                      DELIVERY DATE\n                  </label>\n                  <div>\n                        <Field\n                          name=\"deliveryDate\"\n                          component={DatePicker}\n                          placeholder=\"Select date\"\n                          style={{width: \"55%\", marginTop: \"8px\"}}\n                        />\n                  </div>\n                  <div\n                      style={{\n                          fontFamily: \"DM Sans\",\n                          fontStyle: \"normal\",\n                          fontWeight: \"bold\",\n                          fontSize: \"14px\",\n                          lineHeight: \"24px\",\n                          color: \"#7B8AA1\",\n                          marginTop: \"48px\"\n                      }}\n                  >\n                      COURIERS\n                  </div>\n                  <FieldArray name=\"couriers\">\n                  {({ fields }) =>\n                    fields.map((name, index) => (\n                        <>\n                          <div style={{background: \"#F7F9FC\", borderRadius: \"8px\", marginRight: \"16px\", marginBottom: \"8px\"}}>\n                              <p style={{\n                                  display: \"inline-block\",\n                                  fontFamily: \"DM Sans\",\n                                  fontStyle: \"normal\",\n                                  fontWeight: \"bold\",\n                                  fontSize: \"14px\",\n                                  lineHeight: \"24px\",\n                                  paddingTop: \"21px\",\n                                  marginLeft: \"21px\",\n                                  paddingBottom: \"3px\",\n                                  marginRight: \"46px\",\n                              }}>\n                                  Courier {index + 1}\n                              </p>\n                                <Field\n                                  type=\"radio\"\n                                  name={`${name}.transport`}\n                                  component={Radio}\n                                  value='driving'\n                                  // style={{width: \"55%\", marginTop: \"8px\", display: \"inline-block\"}}\n                                />\n                                <Field\n                                  type=\"radio\"\n                                  name={`${name}.transport`}\n                                  component={Radio}\n                                  value='walking'\n                                  // style={{width: \"55%\", marginTop: \"8px\", display: \"inline-block\"}}\n                                />\n                                <Field\n                                  name={`${name}.capacity`}\n                                  component={DropdownNumber}\n                                  initialValue={100}\n                                  style={{marginLeft: \"30px\"}}\n                              />\n                              <p style={{marginLeft: \"10px\", color: \"#7B8AA1\", display: \"inline-block\"}}>kg</p>\n                          </div>\n                  </>\n                      ))\n                  }\n\n                  </FieldArray>\n\n                  <p\n                      style={{\n                      alignItems: \"baseline\",\n                      display: \"flex\",\n                      flexDirection: \"row\",\n                      justifyContent: \"center\",\n                      paddingTop: \"12px\",\n                  }}\n                      onClick={() => push('couriers', undefined)}\n                  >\n                      <PlusCircleTwoTone style={{display: \"inline-block\", cursor: \"pointer\"}} />\n                      <p style={{color: \"#1890ff\", marginLeft: \"4px\", cursor: \"pointer\"}}> Add courier </p>\n                  </p>\n\n                  <div style={{border: \"1px solid #E9EDF4\"}} />\n                  <div style={{\n                      fontFamily: \"DM Sans\",\n                      fontStyle: \"normal\",\n                      fontWeight: \"bold\",\n                      fontSize: \"14px\",\n                      lineHeight: \"24px\",\n                      color: \"#7B8AA1\",\n                      marginTop: \"48px\"\n                  }}\n                  >\n                      DELIVERY POINTS\n                  </div>\n\n                  <div style={{marginRight: \"16px\"}}>\n                      <FieldArray name=\"points\">\n                  {({ fields }) =>\n                    fields.map((name, index) => (\n                        <div style={{position: \"relative\", marginBottom: \"8px\", background: \"#F7F9FC\", borderRadius: \"8px\",}}>\n                      <p style={{\n                          display: \"block\",\n                          fontFamily: \"DM Sans\",\n                          fontStyle: \"normal\",\n                          fontWeight: \"bold\",\n                          fontSize: \"14px\",\n                          lineHeight: \"24px\",\n                          paddingTop: \"21px\",\n                          marginLeft: \"21px\",\n                          paddingBottom: \"3px\",\n                          marginRight: \"46px\",\n                      }}>\n                          {index === 0 ? \"Starting Point\" : `Point ${index}`\n                          }\n                      </p>\n                      <Field\n                          name={`${name}.lat`}\n                          component={InputNumberComponent}\n                          style={{width: \"16%\", marginBottom: \"16px\", marginLeft: \"16px\"}}\n                      />\n                      <Field\n                        name={`${name}.lng`}\n                        component={InputNumberComponent}\n                          style={{width: \"16%\", marginLeft: \"4px\", marginRight: \"12px\"}}\n                      />\n                      <Field\n                        name={`${name}.time_window`}\n                        component={RangeTimePicker}\n                          // style={{marginLeft: \"45%\"}}\n                      />\n                      {index !== 0 &&\n                          <>\n                          <Field\n                              name={`${name}.demand`}\n                              component={InputNumberComponent}\n                              style={{marginLeft: \"30px\"}}\n                          />\n                          <p style={{marginLeft: \"10px\", color: \"#7B8AA1\", display: \"inline-block\"}}>kg</p>\n                              <CloseCircleFilled\n                                  onClick={() => index !== 0 ? fields.remove(index) : {}}\n                                  style={{\n                                      position: \"absolute\",\n                                      top: \"12px\",\n                                      right: \"12px\",\n                                      fontSize: \"24px\",\n                                      color: \"#7B8AA1\"\n                                  }}\n                              />\n                          </>\n                      }\n                      </div>\n                      ))\n                  }\n                </FieldArray>\n                      <p\n                          onClick={() => push('points', undefined)}\n                          style={{\n                              alignItems: \"baseline\",\n                              display: \"flex\",\n                              flexDirection: \"row\",\n                              justifyContent: \"center\",\n                              paddingTop: \"12px\",\n                          }}\n\n                      >\n                      <PlusCircleTwoTone style={{display: \"inline-block\", cursor: \"pointer\"}} />\n                      <p style={{color: \"#1890ff\", marginLeft: \"4px\", cursor: \"pointer\"}}> Add point </p>\n                  </p>\n\n                  </div>\n\n                  <div style={{float: \"right\", marginRight: \"16px\"}}>\n                      <Button\n                          type=\"default\"\n                          size=\"large\"\n                          onClick={() => {\n                              form.reset();\n                              addPoint([{\n                                  lat: 50.4486941427873,\n                                  lng: 30.52272858686755\n                              }]);\n                          }}\n                          disabled={submitting}\n                      >\n                          Reset\n                      </Button>\n                      <Button\n                          type=\"primary\"\n                          size=\"large\"\n                          style={{marginLeft: \"16px\"}}\n                          onClick={handleSubmit}\n                      >\n                          Create plan\n                      </Button>\n                  </div>\n              </div>\n    )}}\n          />\n    )\n}","import React from \"react\";\nimport {AddPointForm} from \"./AddPointForm\";\n\nvar moment = require('moment');\n\ntype PointType = {\n  lat: number,\n  lng: number,\n  demand?: number\n  time_window?: [moment.Moment, moment.Moment]\n}\n\ntype Response = {\n    routes: RouteType[],\n    dropped_nodes: PointType[]\n}\n\n\ntype RouteType = {\n    route: PointType[],\n    detailed_route: PointType[]\n}\n\n\ntype Props = {\n    points: PointType[],\n    addPoint: (points: PointType[]) => void,\n    result: Response,\n    setResult: (points: Response) => void\n    setShowResult: (showResult: boolean) => void\n    maps: any\n}\n\nexport const AddPointComponent: React.FC<Props> = ({\n   points,\n   addPoint,\n   result,\n   setResult,\n   setShowResult,\n    maps\n}) => {\n    return (\n        <aside style={{ float: \"left\", width: \"34%\" }}>\n        <AddPointForm\n            points={points}\n            addPoint={addPoint}\n            result={result}\n            setResult={setResult}\n            setShowResult={setShowResult}\n            maps={maps}\n        />\n      </aside>\n    )\n}","import React, {useState} from 'react';\nimport './App.css';\nimport \"antd/dist/antd.css\";\nimport SimpleMap from \"./components/SimpleMap\";\nimport {AddPointComponent} from \"./components/AddPointComponent\";\n\nvar moment = require('moment');\n\ntype PointType = {\n  lat: number,\n  lng: number,\n  demand?: number\n  time_window?: [moment.Moment, moment.Moment]\n}\n\ntype Response = {\n    routes: RouteType[],\n    dropped_nodes: PointType[]\n}\n\n\ntype RouteType = {\n    route: PointType[],\n    detailed_route: PointType[]\n}\n\nfunction App() {\n  const [points, addPoint] = useState<PointType[]>([{\n  lat: 50.4486941427873,\n  lng: 30.52272858686755\n  }]);\n  const [result, setResult] = useState<Response>({routes: [], dropped_nodes: []});\n  const [showResult, setShowResult] = useState(false);\n  const [maps, setMaps] = useState(null);\n  return (\n    <div className=\"App\">\n        <AddPointComponent\n            points={points}\n            addPoint={addPoint}\n            result={result}\n            setResult={setResult}\n            setShowResult={setShowResult}\n            maps={maps}\n        />\n      <div>\n        <SimpleMap\n            points={points}\n            addPoint={addPoint}\n            result={result}\n            showResult={showResult}\n            setMap={setMaps}\n            maps={maps}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}